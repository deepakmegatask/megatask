<?php if(!defined('BASEPATH')) exit('No direct script access allowed');require APPPATH . '/libraries/BaseController.php';class Blog extends BaseController{       public function __construct()    {        parent::__construct();       $this->load->model('admin/blog_model');           }        public function index()    {        $this->isLoggedIn();        $data = array();        $this->global['pageTitle'] = 'Property : Ale-izba';        $this->loadViews("admin/blog/list", $this->global, $data , NULL);            }    // Add New     public function addnew()    {            $this->isLoggedIn();        $data = array();        $where  = array();        $where['table']  = 'mt_blog';        $where['status']  = '1';                $data['blogList'] = $this->blog_model->findDynamic($where);        $this->global['pageTitle'] = 'Add New Property : Ale-izba';        $this->loadViews("admin/blog/addnew", $this->global, $data , NULL);            }     // Insert  ************************************************************* public function insertnow()    {        $this->isLoggedIn();                                $this->load->library('form_validation');                    $this->form_validation->set_rules('name','name','trim|required');         //form data         $form_data  = $this->input->post();        if($this->form_validation->run() == FALSE)        {            $this->addnew();        }        else        {            $insertData['name'] = $form_data['name'];            $insertData['slug_url'] = $form_data['slug'];            $insertData['img_alt_name'] = $form_data['img-alt'];            $insertData['description'] = base64_encode($form_data['desc']);            $insertData['created_by '] = $form_data['create'];            $insertData['meta_title'] = $form_data['mt-title'];            $insertData['meta_description'] = $form_data['mt-desc'];            $insertData['meta_keyword'] = $form_data['mt-keyword'];            $insertData['meta_robot'] = $form_data['mt-robot'];            $insertData['status'] = $form_data['status'];            $insertData['date_at'] = date("Y-m-d H:i:s");                                                if(isset($_FILES['image']['name']) && $_FILES['image']['name'] != '') {                $f_name         =$_FILES['image']['name'];                $f_tmp          =$_FILES['image']['tmp_name'];                $f_size         =$_FILES['image']['size'];                $f_extension    =explode('.',$f_name);                $f_extension    =strtolower(end($f_extension));                $f_newfile      =uniqid().'.'.$f_extension;                $store          ="uploads/blog/".$f_newfile;                            if(!move_uploaded_file($f_tmp,$store))                {                    $this->session->set_flashdata('error', 'Image Upload Failed .');                }                else                {                   $insertData['image'] = $f_newfile;                                   }             }                         $result = $this->blog_model->save($insertData);            if($result > 0)            {                $this->session->set_flashdata('success', 'Category successfully Added');            }            else            {                 $this->session->set_flashdata('error', 'Category Addition failed');            }            redirect('admin/blog/addnew');          }              }    // Member list   public function ajax_list()    {        $list = $this->blog_model->get_datatables();                $data = array();        $no =(isset($_POST['start']))?$_POST['start']:'';        foreach ($list as $currentObj) {            $temp_date = $currentObj->date_at;            $dateAt = date("dMY H:ia", strtotime($temp_date));            $selected = ($currentObj->status == 0)?" selected ":"";            $btn = '<select class="statusBtn" name="statusBtn" data-id="'.$currentObj->id.'">';            $btn .= '<option value="1"  >Active</option>';            $btn .= '<option value="0" '.$selected.' >Inactive</option>';            $btn .= '</select>';                        $no++;            $row = array();            $row[] = $no;          /*  $row[] = '<img src ="'.base_url().'uploads/property/'.$currentObj->img.'" width="100" alt = "Ale-izba"/>';*/            $data_dec = base64_decode($currentObj->description);            $dessscripnti = substr( $data_dec, 0, 20);            $row[] =substr( $currentObj->name, 0, 20);            $row[] = $currentObj->slug_url;            $row[] = $currentObj->img_alt_name;            $row[] =  $dessscripnti;            $row[] = $currentObj->created_by;            $row[] = $currentObj->meta_title;            $row[] = substr( $currentObj->meta_description, 0, 20);            $row[] = $currentObj->meta_keyword;            $row[] = $currentObj->meta_robot;            $row[] = $dateAt;            $row[] = $btn;            $row[] = '<a class="btn btn-sm btn-info" href="'.base_url().'admin/blog/edit/'.$currentObj->id.'" title="Edit" ><i class="fa fa-pencil"></i></a>&nbsp;<a class="btn btn-sm btn-danger deletebtn" href="#" data-userid="'.$currentObj->id.'"><i class="fa fa-trash"></i></a>';            $row[] = '<img src="'.base_url().'uploads/blog/'.$currentObj->image.'" style="width:60px;">';             $data[] = $row;        }         $output = array(                        "draw" => (isset($_POST['draw']))?$_POST['draw']:'',                        "recordsTotal" => $this->blog_model->count_all(),                        "recordsFiltered" => $this->blog_model->count_filtered(),                        "data" => $data,                );        //output to json format        echo json_encode($output);    }    // Status Change     public function statusChange($id = NULL)    {        $this->isLoggedIn();        if($_POST['id'] == null)        {            redirect('admin/blog');        }        $insertData['id'] = $_POST['id'];        $insertData['status'] = $_POST['status'];        $result = $this->blog_model->save($insertData);        exit;    }     // Edit     public function edit($id = NULL)    {        $this->isLoggedIn();                if($id == null)        {            redirect('admin/blog');        }        $data['edit_data'] = $this->blog_model->find($id);        $this->global['pageTitle'] = 'Blog ';        $this->loadViews("admin/blog/edit", $this->global, $data , NULL);            }     // Delete  *****************************************************************      function delete()    {        $this->isLoggedIn();        $delId = $this->input->post('id');          $result = $this->blog_model->delete($delId);         if ($result > 0) { echo(json_encode(array('status'=>TRUE))); }        else { echo(json_encode(array('status'=>FALSE))); }    }    // Update category*************************************************************     public function update()    {        $this->isLoggedIn();        $this->load->library('form_validation');                    $this->form_validation->set_rules('name','name','trim|required');        //form data         $form_data  = $this->input->post();        if($this->form_validation->run() == FALSE)        {                            $this->edit($form_data['id']);        }        else        {           $insertData['id']            = $form_data['id'];           $insertData['name']          = $form_data['name'];            $insertData['slug_url']     = $form_data['slug'];            $insertData['img_alt_name'] = $form_data['img-alt'];            $insertData['description']  = base64_encode($form_data['desc']);            $insertData['created_by ']  = $form_data['create'];            $insertData['meta_title']   = $form_data['mt-title'];            $insertData['meta_description'] = $form_data['mt-desc'];            $insertData['meta_keyword'] = $form_data['mt-keyword'];            $insertData['meta_robot']   = $form_data['mt-robot'];            $insertData['status']       = $form_data['status'];            $insertData['update_at']    = date("Y-m-d H:i:s");            if(isset($_FILES['image']['name']) && $_FILES['image']['name'] != '') {                $f_name         =$_FILES['image']['name'];                $f_tmp          =$_FILES['image']['tmp_name'];                $f_size         =$_FILES['image']['size'];                $f_extension    =explode('.',$f_name);                $f_extension    =strtolower(end($f_extension));                $f_newfile      =uniqid().'.'.$f_extension;                $store          ="uploads/blog/".$f_newfile;                            if(!move_uploaded_file($f_tmp,$store))                {                    $this->session->set_flashdata('error', 'Image Upload Failed .');                }                else                {                   $insertData['image'] = $f_newfile;                                   }             }            $result = $this->blog_model->save($insertData);                        if($result > 0)            {                $this->session->set_flashdata('success', ' State successfully Updated');            }            else            {                 $this->session->set_flashdata('error', 'State Updation failed');            }            redirect('admin/blog/edit/'.$insertData['id']);          }      }      public function check_slug()    {                  $form_data  = $this->input->post();         if(isset($form_data['slug_url']))         {                                 $slug_url = strtolower($form_data['slug_url']);                 $where  = array();                 $where['slug_url']  = $slug_url ;                 $where['status']  = 1 ;                 if(isset($form_data['id']))                 {                    $where['id !=']  = $form_data['id'] ;                    }                 $where['status']  = 1 ;                 $result  = $this->blog_model->findDynamic($where);                               if(count($result) > 0)            {                echo 'slug_exist';            }else            {                 echo 'slug_available';            }         }     }}?>